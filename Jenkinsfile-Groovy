@Library('jenkins-shared-library') _
pipeline {
    agent any

    stages {
        stage('Clean Up Workspace') {
            steps {
                sh 'echo "Cleaning the Workspace first"'
                cleanWs()
                sh 'rm -f trivyrepo.txt trivyfs.txt trivyimage.txt'
            }
        }

        stage('Gitub scanning for secrets in Repository') {
            steps {
                script {
                    scannerFor.scan_secrets('https://github.com/mbaynd/taskManager.git')
                }
            }
        }

        stage('Trivy Scan GITHUB Repository') {
            steps {
                script {
                    scannerFor.repo('https://github.com/mbaynd/taskManager.git', 'main')
                }
            }
        }
        stage('Git Checkout') {
            steps { 
                script {
                    //scannerFor.checkoutCode('https://github.com/mbaynd/taskManager.git', 'taskManager')
                    sh 'git clone https://github.com/mbaynd/taskManager.git taskManager && cd taskManager'
                }
            }
        } 
        
        stage('Sonar Qube Analysis') {
            steps {
                script {
                    scannerFor.sast('TaskManager')
                }
            }
        }

        stage('Project Dependencies and FS Scan'){
            parallel {
                stage('Install NPM Dependencies') {
                    steps {
                        script {
                            scannerFor.installDeps('taskManager/frontend')
                        }
                    }
                }

                stage('TRIVY Vulnerability Scan') {
                    steps {
                        script {
                            scannerFor.fs()
                        }
                    }
                }
            }
        } 

        stage('OWASP Dependency-Check Vulnerabilities') {
            steps {
                script {
                    scannerFor.owasp()
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    scannerFor.docker_build('taskManager')
                }
            }
        }

        stage('TRIVY Docker Image Vulnerability Scan') {
            steps {
                script {
                    scannerFor.image('taskmanager-frontend')
                    scannerFor.image('taskmanager-backend')
                }
            }
        }

        stage('Docker Tag Image & Push') {
            steps{
                script{
                    scannerFor.tagPush('taskmanager-frontend', 'mbaynd/taskmanagerfrontend:latest')
                    scannerFor.tagPush('taskmanager-backend', 'mbaynd/taskmanagerbackend:latest')
                }
            }
        }

        stage('Deploy to container to Staging') {
            steps {
                script {
                    scannerFor.deployBuild('taskManager','frontend')
                    scannerFor.deployBuild('taskManager','backend')
                }
            }
        }

        stage('DAST - Dynamic Application Security Testing') {
            steps {
               script {
                    scannerFor.scanDeployment('https://app.cashespeces.net')
                }
            }
        }
    }

    post {
     always {
        emailext attachLog: true,
            mimeType: 'text/html',
            subject: "'${currentBuild.result}'",
            body: "Project: ${env.JOB_NAME}<br/>" +
                "Build Number: ${env.BUILD_NUMBER}<br/>" +
                "URL: ${env.BUILD_URL}<br/>",
            to: 'mbaynd@gmail.com;mbaynd@yahoo.fr',
            attachmentsPattern: 'trivyrepo.txt,trivyfs.txt,trivyimage.txt,stable-full-scan-report.html'
        }
    } 
}
